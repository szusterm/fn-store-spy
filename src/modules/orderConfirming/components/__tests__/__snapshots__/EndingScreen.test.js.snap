// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EndingScreen Component renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EndingScreen
    endingScreenOpened={true}
    hideEndingScreen={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <BlackCurtain
          onClick={[Function]}
          show={true}
        />,
        <div
          className="ending-screen "
        >
          <div
            className="ending-screen--prompt"
          >
            <h2
              className="prompt--text"
            >
              Send this code to the bot
            </h2>
          </div>
          <div
            className="ending-screen--code-copier-box"
          >
            <Connect(CodeCopier) />
          </div>
          <div
            className="ending-screen--buttons"
          >
            <Connect(MessengerLink) />
            <CancelButton
              onClick={[Function]}
            />
          </div>
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "onClick": [Function],
          "show": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="ending-screen--prompt"
            >
              <h2
                className="prompt--text"
              >
                Send this code to the bot
              </h2>
            </div>,
            <div
              className="ending-screen--code-copier-box"
            >
              <Connect(CodeCopier) />
            </div>,
            <div
              className="ending-screen--buttons"
            >
              <Connect(MessengerLink) />
              <CancelButton
                onClick={[Function]}
              />
            </div>,
          ],
          "className": "ending-screen ",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <h2
                className="prompt--text"
              >
                Send this code to the bot
              </h2>,
              "className": "ending-screen--prompt",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Send this code to the bot",
                "className": "prompt--text",
              },
              "ref": null,
              "rendered": "Send this code to the bot",
              "type": "h2",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Connect(CodeCopier) />,
              "className": "ending-screen--code-copier-box",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Connect(MessengerLink) />,
                <CancelButton
                  onClick={[Function]}
                />,
              ],
              "className": "ending-screen--buttons",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <BlackCurtain
            onClick={[Function]}
            show={true}
          />,
          <div
            className="ending-screen "
          >
            <div
              className="ending-screen--prompt"
            >
              <h2
                className="prompt--text"
              >
                Send this code to the bot
              </h2>
            </div>
            <div
              className="ending-screen--code-copier-box"
            >
              <Connect(CodeCopier) />
            </div>
            <div
              className="ending-screen--buttons"
            >
              <Connect(MessengerLink) />
              <CancelButton
                onClick={[Function]}
              />
            </div>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onClick": [Function],
            "show": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="ending-screen--prompt"
              >
                <h2
                  className="prompt--text"
                >
                  Send this code to the bot
                </h2>
              </div>,
              <div
                className="ending-screen--code-copier-box"
              >
                <Connect(CodeCopier) />
              </div>,
              <div
                className="ending-screen--buttons"
              >
                <Connect(MessengerLink) />
                <CancelButton
                  onClick={[Function]}
                />
              </div>,
            ],
            "className": "ending-screen ",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h2
                  className="prompt--text"
                >
                  Send this code to the bot
                </h2>,
                "className": "ending-screen--prompt",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Send this code to the bot",
                  "className": "prompt--text",
                },
                "ref": null,
                "rendered": "Send this code to the bot",
                "type": "h2",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Connect(CodeCopier) />,
                "className": "ending-screen--code-copier-box",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Connect(MessengerLink) />,
                  <CancelButton
                    onClick={[Function]}
                  />,
                ],
                "className": "ending-screen--buttons",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
