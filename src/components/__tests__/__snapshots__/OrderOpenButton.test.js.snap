// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CircleOrderCount Component renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OrderOpenButton
    openOrderList={[Function]}
    orderedItems={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="material-icons"
        >
          <span
            className="order-open-button--icon"
          >
            shopping_basket
          </span>
        </div>,
        <div
          className="order-open-button--items-count"
        >
          <Connect(CircleOrderCount) />
        </div>,
      ],
      "className": "order-open-button order-open-button--closed",
      "onClick": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <span
            className="order-open-button--icon"
          >
            shopping_basket
          </span>,
          "className": "material-icons",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "shopping_basket",
            "className": "order-open-button--icon",
          },
          "ref": null,
          "rendered": "shopping_basket",
          "type": "span",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Connect(CircleOrderCount) />,
          "className": "order-open-button--items-count",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "button",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="material-icons"
          >
            <span
              className="order-open-button--icon"
            >
              shopping_basket
            </span>
          </div>,
          <div
            className="order-open-button--items-count"
          >
            <Connect(CircleOrderCount) />
          </div>,
        ],
        "className": "order-open-button order-open-button--closed",
        "onClick": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <span
              className="order-open-button--icon"
            >
              shopping_basket
            </span>,
            "className": "material-icons",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "shopping_basket",
              "className": "order-open-button--icon",
            },
            "ref": null,
            "rendered": "shopping_basket",
            "type": "span",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Connect(CircleOrderCount) />,
            "className": "order-open-button--items-count",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "button",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
